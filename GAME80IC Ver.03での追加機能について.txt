GAME80IC(Interpreter and Compiler) Ver.03

キーセンス機能を追加しました。

GAME80には、1文字入力機能はありますが、ゲーム等で使用する
キーセンス機能がありません。
GAME80IC Ver.03では、この機能を実装しました。

実装するにあたり、以下の2点に留意しています。

１．互換性を保つ
２．コンパイラに影響を与えない。

＜互換性への配慮＞

互換性を保つには、プログラムが実行可能なGAME80かどうか判断できる
必要があります。GAME80IC Ver.03では、プログラムでGAME80のバージョンを
知ることが出来るようになっています。（変数"V"にバージョン情報が入る）

（変数A-Zの利用）

　GGAME言語では、変数は初期化されない仕様になっています。
　プログラム側で使用する際に変数を初期化する必要があります。
　
　この仕様を利用し、
　
　＊READYの状態からプログラムで変数が初期化されるまでの間は、変数に
　ステータス＆コントロールレジスタの機能を持たせても支障が無いと考え、
　GAME80IC Ver03に実装してあります。
　
　GAME80IC Ver.03で割り当てた変数
　
　A : 変数領域の先頭アドレス（A～Z変数領域の先頭アドレスが入る。）

　V : GAME80ICのバージョン情報が入るVer.03では V=$3330

　Z : <変数>=$の機能変更SWのアドレスが入る。
　　　Z:0)=0 : 通常の1文字入力
　　　Z:0)=1 :  キーセンス状態。
　　　　　　　　<変数>にキー入力があれば、そのキーデータが入る。
　　　　　　　　キー入力がなければ、<変数>に0が入る。
　
　これらの変数は、プログラムで初期化すれば普通の変数として使用可能です。

キーセンスが使用できるかどうかは、GAMEのバージョンを調べることで分かります。

＜プログラム使用例＞

10 ;=#(V=$3330) "Not support!" #=-1
30  Z:0)=1　（キーセンスモードへの切替）
50 変数の初期化
		：
100 A=$ ;=A=0 #=100
120 ;=A=$1B #=-1　（ESCキーだったら、プログラム終了)
130 Aに入ったキーの値に沿った処理
		：

＜注意点＞
キーセンスモード実行中は、インタープリタのキーセンスが無効になります。
理由は、インタープリタと、プログラムでキーの取り合いになる為です。
したがって、ESCキー等でのプログラム中断が出来なくなります。
プログラムの中断処理は、プログラム側で行う必要があります。


プログラムが終了し、*READYの状態に戻ると、変数はステータス＆コントロール
レジスタの状態に設定されることになります。

コンパイラへの影響はありません。問題なくコンパイル出来て実行可能です。

キーセンスのサンプルプログラムとして、

sence1.txt
sence2.txt
sence3.txt

を追加しました。